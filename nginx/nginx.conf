# ===============================
# Upstream servers
# ===============================
upstream neuralcity-fe {
    server frontend:3000;
}

upstream neuralcity-be {
    server backend:5000;
}

# ===============================
# Define rate limit zones
# ===============================
# Store rate limit counters in shared memory (10 MB can store thousands of IP counters)
# Limit: 10 requests per second per IP, burst up to 20 without delaying
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;

# ===============================
# Main server block
# ===============================
server {
    listen 80;

    # ------------------------------------------------------
    # SECURITY HEADERS (adjust CSP for your frontend assets)
    # ------------------------------------------------------
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header Content-Security-Policy "frame-ancestors 'self';" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

    # ===============================
    # FRONTEND
    # ===============================
    location / {
        proxy_pass http://neuralcity-fe;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # ===============================
    # BACKEND API
    # ===============================
    location /api/v1/ {
        # Apply rate limiting
        limit_req zone=api_limit burst=20 nodelay;
        
        proxy_pass http://neuralcity-be;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # ===============================
    # STATIC FILE CACHING
    # ===============================
    location ~* \.(?:ico|css|js|gif|jpe?g|png|woff2?)$ {
        expires 6M;
        access_log off;
        add_header Cache-Control "public";
    }

    # ===============================
    # GZIP COMPRESSION
    # ===============================
    gzip on;
    gzip_types text/plain text/css application/javascript application/json image/svg+xml;
    gzip_min_length 1024;

    # ===============================
    # ERROR PAGES
    # ===============================
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }

    # ===============================
    # LOGGING FORMAT
    # ===============================
    # log_format main '$remote_addr - $remote_user [$time_local] "$request" '
    #                 '$status $body_bytes_sent "$http_referer" '
    #                 '"$http_user_agent" "$http_x_forwarded_for" $request_time';

    # access_log /var/log/nginx/access.log main;
    # error_log /var/log/nginx/error.log warn;
}
